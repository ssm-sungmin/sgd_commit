<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Class="SpeakerUI.MainWindow"
        Title="MainWindow" Height="400" Width="295"
		AllowsTransparency="True"
		WindowStyle="None"
		Background="{x:Null}">

    <Window.Resources>
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F3F3F3" Offset="0"/>
            <GradientStop Color="#EBEBEB" Offset="0.5"/>
            <GradientStop Color="#DDDDDD" Offset="0.5"/>
            <GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        <Style x:Key="DisconnectButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid HorizontalAlignment="Left" Height="40"  VerticalAlignment="Top" Width="287">
                            <Rectangle x:Name="rectangle" Fill="#59FFFFFF" HorizontalAlignment="Center" Height="40" Stroke="{x:Null}" VerticalAlignment="Top" Width="287" RadiusX="3" RadiusY="3"/>
                            <Label x:Name="label" Content="Disconnect" HorizontalAlignment="Center" Height="40" VerticalAlignment="Center" Width="260" HorizontalContentAlignment="Center" Padding="5,5,5,0" UseLayoutRounding="False" FontSize="32" VerticalContentAlignment="Center" FlowDirection="LeftToRight" FontFamily="Orator Std" Foreground="#FFBCD0DC" FontWeight="Bold"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="rectangle" Value="#5971787A"/>
                                <Setter Property="Foreground" TargetName="label" Value="#FF6C8DA0"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RestartButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid HorizontalAlignment="Left" Height="40"  VerticalAlignment="Top" Width="287">
                            <Rectangle x:Name="rectangle" Fill="#59FFFFFF" HorizontalAlignment="Center" Height="40" Stroke="{x:Null}" VerticalAlignment="Top" Width="287" RadiusX="3" RadiusY="3"/>
                            <Label x:Name="label" Content="Restart" HorizontalAlignment="Center" Height="40" VerticalAlignment="Center" Width="260" HorizontalContentAlignment="Center" Padding="5,5,5,0" UseLayoutRounding="False" FontSize="32" VerticalContentAlignment="Center" FlowDirection="LeftToRight" FontFamily="Orator Std" Foreground="#FFBCD0DC" FontWeight="Bold"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="rectangle" Value="#5971787A"/>
                                <Setter Property="Foreground" TargetName="label" Value="#FF6C8DA0"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CloseButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" Width="20">
                            <Rectangle Fill="#FF1D1D1D" HorizontalAlignment="Left" Height="20" Stroke="{x:Null}" VerticalAlignment="Top" Width="20" RadiusX="2" RadiusY="2"/>
                            <Rectangle x:Name="rectangle" HorizontalAlignment="Center" Height="14" RadiusY="2" RadiusX="2" Stroke="{x:Null}" VerticalAlignment="Center" Width="14">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="close_origin.png" Stretch="UniformToFill"/>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="rectangle">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="close_down.png" Stretch="UniformToFill"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MimizeButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" Width="20">
                            <Rectangle Fill="#FF1D1D1D" HorizontalAlignment="Left" Height="20" Stroke="{x:Null}" VerticalAlignment="Top" Width="20" RadiusX="2" RadiusY="2"/>
                            <Rectangle x:Name="rectangle" HorizontalAlignment="Center" Height="14" RadiusY="2" RadiusX="2" Stroke="{x:Null}" VerticalAlignment="Center" Width="14">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="minimize_origin.png" Stretch="UniformToFill"/>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="rectangle">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="minimize_down.png" Stretch="UniformToFill"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid HorizontalAlignment="Center" Height="400" VerticalAlignment="Top" Width="295">
        <Rectangle Fill="#FF1D1D1D" HorizontalAlignment="Left" Height="400" VerticalAlignment="Top" Width="295" RadiusX="8" RadiusY="8" StrokeThickness="0" />
        <Grid x:Name="mainpanel" Width="287" Height="370" Margin="4,26,4,4">
            <Button HorizontalAlignment="Right" VerticalAlignment="Top" Width="20" Height="20" Margin="0,-23,0,0" Style="{DynamicResource CloseButton}" Click="close_Click"/>
            <Button HorizontalAlignment="Right" VerticalAlignment="Top" Width="20" Height="20" Margin="0,-23,25,0" Style="{DynamicResource MimizeButton}" Click="minimize_Click"/>
        </Grid>
        <Rectangle Fill="#E51D1D1D" HorizontalAlignment="Left" Height="20" RadiusY="5" RadiusX="5" StrokeThickness="0" VerticalAlignment="Top" Width="240" MouseDown="TitleBar_Down"/>

        <TextBlock x:Name="Information_restart" HorizontalAlignment="Center" Height="70" Margin="0,160,0,0" TextWrapping="Wrap" Text="모든 연결이 종료되었습니다.    다시 시작하시려면 'RESTART' 버튼은 눌러주세요." VerticalAlignment="Top" Width="250"  
				FontSize="17" FontFamily="KoreanYNSJG3R" TextAlignment="Center" FontWeight="Bold" Foreground="#FFEDE3E9" Visibility="Hidden" />

        <Button x:Name="disconnectBtn" HorizontalAlignment="Center" Height="40" Margin="0,350,0,0" VerticalAlignment="Top" Width="287" Background="{x:Null}" Foreground="White" BorderBrush="{x:Null}" 
			FontSize="19" FontFamily="KoreanYGYCB" TextOptions.TextFormattingMode="Display" Style="{DynamicResource DisconnectButton}" Visibility="Hidden" Click="disconnect_Click"/>

        <Button x:Name="restartBtn" HorizontalAlignment="Center" Height="40" Margin="0,300,0,0" VerticalAlignment="Top" Width="287" Background="{x:Null}" Foreground="White" BorderBrush="{x:Null}" 
			FontSize="19" FontFamily="KoreanYGYCB" TextOptions.TextFormattingMode="Display" Style="{DynamicResource RestartButton}" Click="restart_Click" Visibility="Hidden" />
        
    </Grid>
</Window>
